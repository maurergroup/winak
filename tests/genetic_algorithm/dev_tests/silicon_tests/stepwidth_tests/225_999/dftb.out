================================================================================
==
==   DFTB+ (Density Functional Tight Binding and much more)
==
==                          Unofficial release (r4465)
==
==                            (ParserVersion = 4)
==
================================================================================

********************************************************************************
** Parsing and initializing
********************************************************************************

Interpreting input file 'dftb_in.hsd'
--------------------------------------------------------------------------------
Reading SK-files:
  /user/panosetti/data/progs/DFTB/parameters/pbc/pbc-0-3/H-H.skf
  /user/panosetti/data/progs/DFTB/parameters/pbc/pbc-0-3/H-Si.skf
  /user/panosetti/data/progs/DFTB/parameters/pbc/pbc-0-3/Si-H.skf
  /user/panosetti/data/progs/DFTB/parameters/pbc/pbc-0-3/Si-Si.skf
Done.


Processed input in HSD format written to 'dftb_pin.hsd'

Starting initialization...
--------------------------------------------------------------------------------
PGRID:ORBITAL: 1 x 2 x 4
PGRID:ALLPROC: 2 x 4
PGRID:ATOM: 2 x 2
RECLATPOINTS: 8767
Mode:                        Conjugate gradient relaxation
Self consistent charges:     Yes
SCC-tolerance:                 0.100000E-04
Max. scc iterations:                    100
Ewald alpha parameter:         0.500000E+00
Spin polarisation:           No
Nr. of up electrons:           108.500000
Nr. of down electrons:         108.500000
Periodic boundaries:         Yes
Diagonalizer:                Divide and Conquer
Maximal SCC-cycles:                     100
Nr. of moved atoms:                      61
Max. nr. of geometry steps:               0
Force tolerance:               0.100000E-03
Electronic temperature:        0.100000E-01
Initial charges:             Set automatically (system chrg:   0.000E+00)
Included shells:              H:  s
                             Si:  s, p
K-points and weights:           1: -0.333333 -0.333333  0.000000     0.111111
                                2: -0.333333  0.000000  0.000000     0.111111
                                3: -0.333333  0.333333  0.000000     0.111111
                                4:  0.000000 -0.333333  0.000000     0.111111
                                5:  0.000000  0.000000  0.000000     0.111111
                                6:  0.000000  0.333333  0.000000     0.111111
                                7:  0.333333 -0.333333  0.000000     0.111111
                                8:  0.333333  0.000000  0.000000     0.111111
                                9:  0.333333  0.333333  0.000000     0.111111
Extra options:

********************************************************************************
** Geometry step: 0
********************************************************************************

MAXNEIGHBORS: 641
  iSCC Total electronic   Diff electronic      SCC error    
Operation failed!
Operation failed!
ppotrf in scalafx_ppotrf_dcomplex
Info: 206
Operation failed!
ppotrf in scalafx_ppotrf_dcomplex
Info: 206
Operation failed!
ppotrf in scalafx_ppotrf_dcomplex
Info: 206
ppotrf in scalafx_ppotrf_dcomplex
Info: 206
Operation failed!
ppotrf in scalafx_ppotrf_dcomplex
Info: 206
Operation failed!
ppotrf in scalafx_ppotrf_dcomplex
Info: 206
Operation failed!
ppotrf in scalafx_ppotrf_dcomplex
Info: 206
Operation failed!
ppotrf in scalafx_ppotrf_dcomplex
Info: 206
--------------------------------------------------------------------------
mpirun.openmpi has exited due to process rank 1 with PID 0 on
node sixgun exiting improperly. There are three reasons this could occur:

1. this process did not call "init" before exiting, but others in
the job did. This can cause a job to hang indefinitely while it waits
for all processes to call "init". By rule, if one process calls "init",
then ALL processes must call "init" prior to termination.

2. this process called "init", but exited without calling "finalize".
By rule, all processes that call "init" MUST call "finalize" prior to
exiting or it will be considered an "abnormal termination"

3. this process called "MPI_Abort" or "orte_abort" and the mca parameter
orte_create_session_dirs is set to false. In this case, the run-time cannot
detect that the abort call was an abnormal termination. Hence, the only
error message you will receive is this one.

This may have caused other processes in the application to be
terminated by signals sent by mpirun.openmpi (as reported here).

You can avoid this message by specifying -quiet on the mpirun.openmpi command line.
--------------------------------------------------------------------------
